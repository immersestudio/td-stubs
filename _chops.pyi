import typing as _T
import numpy

if False:
	from td import *

_NameOrIndex = _T.Union[str, int, 'Cell', 'Channel']

class Channel(_T.SupportsInt, _T.SupportsFloat):
	valid: bool
	index: int
	name: str
	owner: 'AnyOpT'
	exports: list
	vals: _T.List[float]

	def __getitem__(self, index: int) -> float: ...
	def __setitem__(self, index: int, value: _T.Union[int, float]): ...
	def eval(self, index: _T.Optional[int] = None) -> float: ...
	def evalFrame(self, frame) -> float: ...
	def evalSeconds(self, secs) -> float: ...
	def numpyArray(self) -> numpy.array: ...
	def destroy(self) -> None: ...
	def average(self) -> float: ...
	def min(self) -> float: ...
	def max(self) -> float: ...
	def __int__(self) -> int: ...
	def __float__(self) -> float: ...

class CHOP(OP):
	numChans: int
	numSamples: int
	start: float
	end: float
	rate: float
	export: bool
	exportChanges: int
	isCHOP: bool
	isTimeSlice: bool

	def __getitem__(self, nameOrIndex: _NameOrIndex) -> 'Channel': ...
	def chan(self, *nameOrIndex: _NameOrIndex, caseSensitive=True) -> _T.Optional['Channel']: ...
	def chans(self, *nameOrIndex: _NameOrIndex, caseSensitive=True) -> _T.List['Channel']: ...
	def numpyArray(self) -> 'numpy.array': ...
	def convertToKeyframes(self, tolerance=0.1) -> 'animationCOMP': ...
	def save(self, filepath) -> str: ...

AnyChopT = _T.Union[CHOP]
